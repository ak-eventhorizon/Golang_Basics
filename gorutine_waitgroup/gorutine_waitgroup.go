package main // определение пакета для текущего файла
import (
	"fmt"
	"sync"
	"time"
)

// ********* WaitGroup *********
// Еще одна возможность по синхронизации горутин - этот тип позволяет определить группу горутин, которые должны выполняться вместе как одна.
// Можно установить блокировку, которая приостановит выполнение функции, пока не завершит выполнение вся группа горутин.

func main() {

	var wg sync.WaitGroup
	wg.Add(4) // в группе четыре горутины - по сути, это внутренний счетчик, он уменьшается на единицу каждый раз, когда срабатывает wg.Done()

	work := func(id int) {
		defer wg.Done()
		fmt.Printf("Горутина %d начала выполнение \n", id)
		time.Sleep(2 * time.Second)
		fmt.Printf("Горутина %d завершила выполнение \n", id)
	}

	// вызываем горутины
	go work(1)
	go work(2)
	go work(3)
	go work(4)

	wg.Wait() // ожидаем завершения четырех горутин
	fmt.Println("Все горутины завершили выполнение")
}
